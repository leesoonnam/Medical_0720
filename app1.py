# ----------------------------------------
# 📂 파일명: app.py
# ✅ 기능: 천안시 서북구 약국 데이터 불러와서 테이블 + 지도 출력
# ----------------------------------------

import streamlit as st
import pandas as pd
import folium
from streamlit_folium import folium_static

# -------------------------------
# 1) 페이지 기본 설정
# -------------------------------
st.set_page_config(
    page_title="천안시 서북구 약국 찾기",  # 웹 브라우저 탭에 뜨는 이름
    page_icon="💊",                     # 브라우저 탭에 뜨는 작은 아이콘 (이모지 가능!)
    layout="wide"                       # 화면을 넓게 쓸지(와이드) 기본으로 쓸지
)


st.title("💊 천안시 서북구 약국 찾기")
st.markdown("CSV 데이터에서 **약국 정보**를 불러와서 테이블과 지도로 확인할 수 있어요!")

# -------------------------------
# 2) CSV 데이터 불러오기
# -------------------------------
# -------------------------------
# 📌 Streamlit에서 데이터 불러올 때 결과를 기억해두는 데코레이터
# 새로고침할 때 속도가 빨라져요!
# -------------------------------
@st.cache_data
def load_data():
    try:
        # CSV 파일을 불러와요.
        # encoding='cp949'를 써야 한글 깨짐이 없어요!
        df = pd.read_csv("TOTAL_sp_ta_medical_ifo.csv", encoding='cp949')
    except FileNotFoundError:
        # 만약 파일이 없으면 화면에 에러 메시지를 보여줘요.
        st.error("CSV 파일이 경로에 없습니다!")
        return None

    # -------------------------------
    # 💊 약국 데이터만 골라요.
    # '종별코드명'에 '약국'이라는 글자가 들어간 것만 선택!
    # -------------------------------
    df_pharmacy = df[df['종별코드명'].str.contains('약국', na=False)]
    
    # -------------------------------
    # 📍 천안서북구 약국만 또 골라요!
    # -------------------------------
    df_seobuk = df_pharmacy[df_pharmacy['시군구명'] == '천안서북구']

    # -------------------------------
    # 🗃️ 다 골라낸 표를 함수 바깥으로 보내줘요!
    # -------------------------------
    return df_seobuk

# --------------------------------
# 📂 함수 load_data()를 실행해서 df에 담아요.
# --------------------------------
df = load_data()

# --------------------------------
# 🚫 만약 데이터가 없거나 비어있으면 앱을 멈춰요.
# (없는데 계속 돌면 에러가 나니까!)
# --------------------------------
if df is None or df.empty:
    st.stop()

# -------------------------------
# 3) 데이터 테이블 미리보기
# -------------------------------
# -----------------------------------------------
# 📋 1) 데이터 표 보여주기
# -----------------------------------------------

# 화면에 소제목(작은 제목)을 달아요!
st.subheader("📋 약국 데이터")

# df 표에서 '병원명', '주소', '전화번호', '위도', '경도' 열만 보여줘요.
# use_container_width=True → 표가 화면 너비에 맞게 넓어져요!
st.dataframe(df[['병원명', '주소', '전화번호', '위도', '경도']], use_container_width=True)

# -----------------------------------------------
# 🏘️ 2) 읍면동 선택 필터 만들기
# -----------------------------------------------

# 표에서 '읍면동명' 열의 값들만 모아서 중복은 없애고 (unique)
# 빈칸(NaN)은 빼버려요! (dropna)
eupmyeondong_list = df['읍면동명'].dropna().unique()

# selectbox: 드롭다운 메뉴처럼 고를 수 있는 상자
# 학생이 읍면동을 하나 선택할 수 있어요!
selected_eupmyeondong = st.selectbox("🏘️ 읍면동 선택", options=eupmyeondong_list)

# 선택한 읍면동만 표에서 골라요!
filtered = df[df['읍면동명'] == selected_eupmyeondong]

# -----------------------------------------------
# ✅ 3) 선택한 읍면동 결과 보여주기
# -----------------------------------------------

# 선택된 읍면동 이름을 알려줘요!
st.success(f"선택된 읍면동 : {selected_eupmyeondong}")

# 선택된 결과를 다시 표로 보여줘요!
# 이번엔 위도, 경도는 빼고 병원명, 주소, 전화번호만!
st.dataframe(filtered[['병원명', '주소', '전화번호']], use_container_width=True)

# -------------------------------
# 5) Folium 지도 출력
# -------------------------------
# ----------------------------------------
# 📍 1) 지도에 붙일 소제목 달기
# ----------------------------------------
st.subheader("📍 약국 위치 지도")

# ----------------------------------------
# 📍 2) 좌표가 없는 데이터는 지도에 못 찍으니까 빼기
# dropna(subset=['위도','경도'])는 위도/경도가 빈칸이면 제외!
# ----------------------------------------
coords = filtered.dropna(subset=['위도', '경도'])

# ----------------------------------------
# 📍 3) 만약 찍을 수 있는 좌표가 있다면!
# coords.empty는 표가 비어있으면 True → not 붙이면 좌표가 있다는 뜻!
# ----------------------------------------
if not coords.empty:
    # 3-1) folium으로 빈 지도 만들기
    m = folium.Map()

    # 3-2) 선택한 약국들의 좌표 범위를 계산해서 지도가 잘 맞게 확대/축소!
    bounds = [
        [coords['위도'].min(), coords['경도'].min()],  # 좌측 아래 꼭짓점
        [coords['위도'].max(), coords['경도'].max()]   # 우측 위 꼭짓점
    ]
    m.fit_bounds(bounds) # 지도 범위 설정하기

    # 3-3) 약국 하나씩 반복하면서 지도에 핀 찍기!
    for _, row in coords.iterrows():
        folium.Marker(
            [row['위도'], row['경도']],   # 핀 찍을 위치 (위도, 경도)
            popup=row['병원명'],          # 핀 클릭하면 뜨는 말풍선
            tooltip=row['병원명']         # 마우스 올리면 살짝 보이는 이름
        ).add_to(m)  # 지도에 추가하기!

    # 3-4) Streamlit 화면에 folium 지도 보여주기!
    folium_static(m, width=800, height=500)

# ----------------------------------------
# 📍 4) 찍을 좌표가 없으면 안내 문구 보여주기!
# ----------------------------------------
else:
    st.info("위치 정보가 없습니다.")

# -------------------------------
# 끝!
# -------------------------------
